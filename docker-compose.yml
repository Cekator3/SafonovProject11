volumes:
    public:
    public2:
    postgres-data:
    redis-data:

services:
    postgres:
        image: postgres:alpine
        container_name: ${APP_NAME}_postgres
        volumes:
            # To save database data in persistent docker volume
            - postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            PGPASSWORD: '${DB_PASSWORD}'
        networks:
            - app
        healthcheck:
            test: ["CMD", "pg_isready", '-q', '-d', '${DB_DATABASE}', '-U', '${DB_USERNAME}']
            timeout: 5s
            retries: 3

    redis:
        image: redis:alpine
        container_name: ${APP_NAME}_redis
        volumes:
            # To save redis data in persistent docker volume
            - redis-data:/data
        networks:
            - app
        healthcheck:
            test: ["CMD", "redis-cli", 'ping']
            retries: 3
            timeout: 5s

    # Web server
    web:
        image: nginx_img
        container_name: ${APP_NAME}_nginx
        volumes:
            # To share public data (css, js, images) between nginx and php
            - public:/var/www/html/public
            - public2:/var/www/html/storage/app/public
        ports:
            - "80:80"
        networks:
            - app

    php:
        image: php_img
        container_name: ${APP_NAME}_php
        volumes:
            # To share public data (css, js, images) between nginx and php
            - public:/var/www/html/public
            - public2:/var/www/html/storage/app/public
        networks:
            - app

networks:
    app:
        driver: bridge
